"""
Archivo Docker Compose para facilitar el deployment
"""

version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: pacientes_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: pacientes_monitoreo
      MYSQL_USER: app_pacientes
      MYSQL_PASSWORD: password_seguro
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  api:
    build: .
    container_name: pacientes_api
    environment:
      - DATABASE_URL=mysql+pymysql://app_pacientes:password_seguro@mysql/pacientes_monitoreo
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    restart: unless-stopped
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: pacientes_mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: unless-stopped

volumes:
  mysql_data:


# Dockerfile
FROM python:3.11-slim

WORKDIR /app

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    gcc \
    pkg-config \
    default-libmysqlclient-dev \
    && rm -rf /var/lib/apt/lists/*

# Copiar archivos de requisitos
COPY requirements.txt .

# Instalar dependencias de Python
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código de la aplicación
COPY . .

# Exponer puerto
EXPOSE 8000

# Comando para ejecutar la aplicación
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
